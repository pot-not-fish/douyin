// Code generated by hertz generator.

package user_api

import (
	"context"

	user_api "douyin/app/biz/model/user_api"
	"douyin/common/dao"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// Register .
// @router /douyin/user/register [POST]
func Register(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user_api.RegisterReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(user_api.RegisterResp)

	user, err := dao.DefaultDao.UserDao.Create()
	if err != nil {
		c.String(consts.StatusBadRequest, "fail to create user")
	}
	resp.StatusCode = 0
	resp.StatusMsg = "OK"
	resp.UserID = user.ID
	c.JSON(consts.StatusOK, resp)
}

// Userinfo .
// @router /douyin/user [GET]
func Userinfo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user_api.UserinfoReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(user_api.UserinfoResp)

	user, err := dao.DefaultDao.FirstByID(req.UserID)
	if err != nil {
		c.String(consts.StatusBadRequest, "could not found userinfo")
		return
	}

	resp.StatusCode = 1
	resp.StatusMsg = "OK"
	resp.User = &user_api.User{
		ID:             user.ID,
		FollowCount:    user.FollowCount,
		FansCount:      user.FansCount,
		WorkCount:      user.WorkCount,
		FavoriteCount:  user.FavoriteCount,
		TotalFavorited: user.TotalFavorited,
		// TODO: IsFollow
	}
	c.JSON(consts.StatusOK, resp)
}
