// Code generated by Kitex v0.7.1. DO NOT EDIT.

package favoriteservice

import (
			"context"
				favorite_rpc "douyin/internal/pkg/kitex_gen/favorite_rpc"
				client "github.com/cloudwego/kitex/client"
				kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
)

func serviceInfo() *kitex.ServiceInfo {
	return favoriteServiceServiceInfo
 }

var favoriteServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "FavoriteService"
	handlerType := (*favorite_rpc.FavoriteService)(nil)
	methods := map[string]kitex.MethodInfo{
		"IsFavorite":
			kitex.NewMethodInfo(isFavoriteHandler, newFavoriteServiceIsFavoriteArgs, newFavoriteServiceIsFavoriteResult, false),
	}
	extra := map[string]interface{}{
		"PackageName":	 "favorite_rpc",
		"ServiceFilePath": "..\\..\\idl\\kitex-idl\\favorite_rpc.thrift",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName: 	 serviceName,
		HandlerType: 	 handlerType,
		Methods:     	 methods,
		PayloadCodec:  	 kitex.Thrift,
		KiteXGenVersion: "v0.7.1",
		Extra:           extra,
	}
	return svcInfo
}



func isFavoriteHandler(ctx context.Context, handler interface{}, arg, result interface{}) error { 
	realArg := arg.(*favorite_rpc.FavoriteServiceIsFavoriteArgs)
	realResult := result.(*favorite_rpc.FavoriteServiceIsFavoriteResult)
	success, err := handler.(favorite_rpc.FavoriteService).IsFavorite(ctx, realArg.Request)
	if err != nil {
	return err
	}
	realResult.Success = success
	return nil 
}
func newFavoriteServiceIsFavoriteArgs() interface{} {
	return favorite_rpc.NewFavoriteServiceIsFavoriteArgs()
}

func newFavoriteServiceIsFavoriteResult() interface{} {
	return favorite_rpc.NewFavoriteServiceIsFavoriteResult()
}


type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}


func (p *kClient) IsFavorite(ctx context.Context , request *favorite_rpc.IsFavoriteReq) (r *favorite_rpc.IsFavoriteResp, err error) {
	var _args favorite_rpc.FavoriteServiceIsFavoriteArgs
	_args.Request = request
	var _result favorite_rpc.FavoriteServiceIsFavoriteResult
	if err = p.c.Call(ctx, "IsFavorite", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}

